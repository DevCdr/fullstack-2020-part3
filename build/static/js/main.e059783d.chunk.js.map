{"version":3,"sources":["services/names.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","type","className","Filter","filter","setFilter","value","onChange","event","target","PersonForm","persons","setPersons","name","setName","number","setNumber","setMessage","setType","onSubmit","preventDefault","nameObject","person","find","n","toLowerCase","undefined","nameService","concat","setTimeout","catch","error","AddID","window","confirm","map","ReplaceID","Persons","namesToShow","includes","i","key","Name","onClick","DeleteID","App","useState","newFilter","setNewFilter","newName","setNewName","newNumber","setNewNumber","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e059783d.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteID = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteID }","import React, { useState, useEffect } from 'react'\nimport nameService from './services/names'\nimport './index.css'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({ filter, setFilter }) => {\n  const handleFilterChange = (event) => setFilter(event.target.value)\n\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({ persons, setPersons, name, setName, number, setNumber, setMessage, setType }) => {\n  const addName = (event) => {\n    event.preventDefault()\n\n    const nameObject = {\n      name: name,\n      number: number\n    }\n\n    const person = persons.find(n => n.name.toLowerCase() === name.toLowerCase())\n    person === undefined\n      ? AddID(nameObject, persons, setPersons, setName, setNumber, setMessage, setType)\n      : ReplaceID(nameObject, person, persons, setPersons, setName, setNumber, setMessage, setType)\n  }\n\n  const handleNameChange = (event) => setName(event.target.value)\n  const handleNumberChange = (event) => setNumber(event.target.value)\n\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={name} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={number} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ persons, setPersons, filter, setMessage, setType }) => {\n  const namesToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      {namesToShow.map((person, i) => <Name key={i} person={person} persons={persons} setPersons={setPersons} setMessage={setMessage} setType={setType} />)}\n    </div>\n  )\n}\n\nconst Name = ({ person, persons, setPersons, setMessage, setType }) => {\n  return (\n    <div>{person.name} {person.number} <button onClick={() => DeleteID(person, persons, setPersons, setMessage, setType)}>delete</button></div>\n  )\n}\n\nfunction AddID(nameObject, persons, setPersons, setName, setNumber, setMessage, setType) {\n  nameService\n    .create(nameObject)\n    .then(response => {\n      setPersons(persons.concat(response))\n      setName('')\n      setNumber('')\n      setMessage(`Added ${nameObject.name}`)\n      setTimeout(() => {setMessage(null)}, 2000)\n      setType('notice')\n    })\n    .catch(error => {\n      setMessage(error.response.data.error)\n      setTimeout(() => {setMessage(null)}, 2000)\n      setType('error')\n    })\n}\n\nfunction ReplaceID(nameObject, person, persons, setPersons, setName, setNumber, setMessage, setType) {\n  if (window.confirm(`${nameObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n    nameService\n      .update(person.id, nameObject)\n      .then(response => {\n        setPersons(persons.map(n => n.id !== person.id ? n : response))\n        setName('')\n        setNumber('')\n        setMessage(`Updated ${nameObject.name}`)\n        setTimeout(() => {setMessage(null)}, 2000)\n        setType('notice')\n      })\n      .catch(() => {\n        setPersons(persons.filter(n => n.id !== person.id))\n        setMessage(`Information of ${nameObject.name} has already been removed from server`)\n        setTimeout(() => {setMessage(null)}, 2000)\n        setType('error')\n      })\n  }\n}\n\nfunction DeleteID(person, persons, setPersons, setMessage, setType) {\n  if (window.confirm(`Delete ${person.name}?`)) {\n    nameService\n      .deleteID(person.id)\n      .then(() => {\n        setPersons(persons.filter(n => n.id !== person.id))\n        setMessage(`Deleted ${person.name}`)\n        setTimeout(() => {setMessage(null)}, 2000)\n        setType('notice')\n      })\n      .catch(() => {\n        setPersons(persons.filter(n => n.id !== person.id))\n        setMessage(`Information of ${person.name} has already been removed from server`)\n        setTimeout(() => {setMessage(null)}, 2000)\n        setType('error')\n      })\n  }\n}\n\nconst App = () => {\n  const [newFilter, setNewFilter] = useState('')\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [message, setMessage] = useState(null)\n  const [type, setType] = useState('')\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={type} />\n      <Filter filter={newFilter} setFilter={setNewFilter} />\n      <h3>Add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} name={newName} setName={setNewName} number={newNumber} setNumber={setNewNumber} setMessage={setMessage} setType={setType} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} setPersons={setPersons} filter={newFilter} setMessage={setMessage} setType={setType} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}